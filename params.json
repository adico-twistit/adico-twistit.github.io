{
  "name": "Titan Graph DB 1.0.0 backend DynamoDB, Gremlin-Groovy, Loopback, NodeJs",
  "tagline": "Notes & Mostly Dev Stuff",
  "body": "### Welcome.\r\nNotes about my experience with the Titan Graph DB 1.0.0 backend DynamoDB, Gremlin-Groovy, Loopback, NodeJs stack for building social network REST API (i guess it will be) focused mainly on titan. \r\n\r\n### Setup\r\nThe setup is easy and consisting of a few steps:\r\n1. install dynamo db locally\r\n2. install titan 1.0.0 with dynamo as backend\r\n3. for API i used loopback over nodeJs which provided easy to setup API framework\r\n\r\n### Versions, Downloads ... References\r\n[Running DynamoDB Locally](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.DynamoDBLocal.html)\r\nMostly what this docs say is download unpack and run the java server (need Java 1.7(#TODO: maybe 1.8 need to check) and above)\r\n\r\n[The Amazon DynamoDB Storage Backend for Titan 1.0.0](https://github.com/awslabs/dynamodb-titan-storage-backend)\r\nAgain, mostly what this docs say is download unpack and run the java server (need Java 1.7(#TODO: maybe 1.8 need to check) and above)\r\n\r\n[Yet Another how to install by AWS](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.TitanDB.DownloadingAndRunning.html)\r\n\r\n[From Local to Production - Some Settings you might need to know](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.TitanDB.Storage.DDBLocal.html)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}